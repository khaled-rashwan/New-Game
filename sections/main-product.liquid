{% comment %}
  Product Page Template - Fully Editable in Shopify
  Save this as: sections/product-template.liquid
{% endcomment %}

<div class="product-page">
  <!-- Breadcrumb -->
  <nav class="breadcrumb">
    <a href="{{ routes.root_url }}" class="breadcrumb-back">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="15 18 9 12 15 6"></polyline>
      </svg>
      {{ section.settings.back_text }}
    </a>
    <span class="breadcrumb-separator">/</span>
    <a href="{{ routes.root_url }}">{{ section.settings.home_text }}</a>
    <span class="breadcrumb-separator">/</span>
    <a href="{{ routes.collections_url }}">{{ section.settings.collections_text }}</a>
    <span class="breadcrumb-separator">/</span>
    <span class="breadcrumb-current">{{ product.title }}</span>
  </nav>

  <!-- Product Content -->
  <div class="product-container">
    <!-- Product Images -->
    <div class="product-gallery">
      {% if product.compare_at_price > product.price %}
        <span class="product-sale-badge">{{ section.settings.sale_badge_text }}</span>
      {% endif %}

      <div class="main-image">
        {% if product.featured_image %}
          <img src="{{ product.featured_image | img_url: '800x' }}" 
               alt="{{ product.title }}" 
               id="mainProductImage"
               width="800"
               height="800" />
        {% else %}
          <div class="image-placeholder">
            <svg width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#ccc" stroke-width="1">
              <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
              <circle cx="8.5" cy="8.5" r="1.5"></circle>
              <polyline points="21 15 16 10 5 21"></polyline>
            </svg>
          </div>
        {% endif %}
      </div>

      {% if product.images.size > 1 %}
        <div class="thumbnail-images">
          {% for image in product.images limit: 4 %}
            <div class="thumbnail {% if forloop.first %}active{% endif %}" 
                 data-image="{{ image | img_url: '800x' }}">
              <img src="{{ image | img_url: '150x' }}" 
                   alt="{{ product.title }}"
                   width="150"
                   height="150" />
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>

    <!-- Product Info -->
    <div class="product-info">
      <!-- Category and Stock -->
      <div class="product-header">
        {% assign first_tag = product.tags | first %}
        {% if first_tag %}
          <span class="product-category">{{ first_tag }}</span>
        {% endif %}
        
        {% if product.available %}
          <span class="stock-badge in-stock">{{ section.settings.in_stock_text }}</span>
        {% else %}
          <span class="stock-badge out-of-stock">{{ section.settings.out_stock_text }}</span>
        {% endif %}
      </div>

      <!-- Title and Rating -->
      <h1 class="product-title">{{ product.title }}</h1>
      
      <div class="product-rating">
        {% assign rating = product.metafields.custom.rating | default: 4.8 %}
        {% assign reviews_count = product.metafields.custom.reviews_count | default: 1247 %}
        <div class="stars">
          {% for i in (1..5) %}
            {% if i <= rating %}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="#FFC107" stroke="none">
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
              </svg>
            {% else %}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#FFC107" stroke-width="2">
                <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
              </svg>
            {% endif %}
          {% endfor %}
        </div>
        <span class="rating-text">{{ rating }} ({{ reviews_count }} {{ section.settings.reviews_text }})</span>
      </div>

      <!-- Game Specs -->
      <div class="game-specs">
        <div class="spec-item">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#FF6B35" stroke-width="2">
            <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
            <circle cx="9" cy="7" r="4"></circle>
            <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
            <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
          </svg>
          <div>
            <div class="spec-value">{{ product.metafields.custom.players | default: '3-4' }}</div>
            <div class="spec-label">{{ section.settings.players_text }}</div>
          </div>
        </div>

        <div class="spec-item">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#FF6B35" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <polyline points="12 6 12 12 16 14"></polyline>
          </svg>
          <div>
            <div class="spec-value">{{ product.metafields.custom.playtime | default: '60-90 min' }}</div>
            <div class="spec-label">{{ section.settings.playtime_text }}</div>
          </div>
        </div>

        <div class="spec-item">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#FF6B35" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <path d="M12 16v-4"></path>
            <path d="M12 8h.01"></path>
          </svg>
          <div>
            <div class="spec-value">{{ product.metafields.custom.complexity | default: 'Medium' }}</div>
            <div class="spec-label">{{ section.settings.complexity_text }}</div>
          </div>
        </div>
      </div>

      <!-- Price -->
      <div class="product-price-section">
        {% if product.compare_at_price > product.price %}
          <span class="current-price">{{ product.price | money }}</span>
          <span class="original-price">{{ product.compare_at_price | money }}</span>
          <span class="save-badge">{{ section.settings.save_text }} {{ product.compare_at_price | minus: product.price | money }}</span>
        {% else %}
          <span class="current-price">{{ product.price | money }}</span>
        {% endif %}
      </div>

      <!-- Quantity and Add to Cart -->
      <form action="/cart/add" method="post" class="product-form">
        <div class="quantity-cart-wrapper">
          <div class="quantity-selector">
            <button type="button" class="qty-btn minus" onclick="decrementQty()">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="5" y1="12" x2="19" y2="12"></line>
              </svg>
            </button>
            <input type="number" 
                   name="quantity" 
                   value="1" 
                   min="1" 
                   class="qty-input" 
                   id="quantity" />
            <button type="button" class="qty-btn plus" onclick="incrementQty()">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="12" y1="5" x2="12" y2="19"></line>
                <line x1="5" y1="12" x2="19" y2="12"></line>
              </svg>
            </button>
          </div>

          {% if product.available %}
            <span class="stock-status">{{ section.settings.in_stock_text }}</span>
          {% endif %}
        </div>

        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" />
        
        <div class="action-buttons">
          <button type="submit" class="add-to-cart-btn" {% unless product.available %}disabled{% endunless %}>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="9" cy="21" r="1"></circle>
              <circle cx="20" cy="21" r="1"></circle>
              <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
            </svg>
            {% if product.available %}
              {{ section.settings.add_to_cart_text }}
            {% else %}
              {{ section.settings.sold_out_text }}
            {% endif %}
          </button>

          <button type="button" class="wishlist-icon-btn" onclick="toggleWishlist({{ product.id }})">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
            </svg>
          </button>

          <button type="button" class="share-icon-btn" onclick="shareProduct()">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="18" cy="5" r="3"></circle>
              <circle cx="6" cy="12" r="3"></circle>
              <circle cx="18" cy="19" r="3"></circle>
              <line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line>
              <line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>
            </svg>
          </button>
        </div>
      </form>

      <!-- Product Features -->
      <div class="product-features">
        <div class="feature-item">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#10b981" stroke-width="2">
            <polyline points="20 6 9 17 4 12"></polyline>
          </svg>
          <span>{{ section.settings.feature_1 | default: 'Free shipping on orders over $75' }}</span>
        </div>
        <div class="feature-item">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#10b981" stroke-width="2">
            <polyline points="20 6 9 17 4 12"></polyline>
          </svg>
          <span>{{ section.settings.feature_2 | default: '30-day return policy' }}</span>
        </div>
        <div class="feature-item">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#10b981" stroke-width="2">
            <polyline points="20 6 9 17 4 12"></polyline>
          </svg>
          <span>{{ section.settings.feature_3 | default: 'Secure payment processing' }}</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Product Tabs -->
  <div class="product-tabs">
    <div class="tabs-header">
      <button class="tab-button active" data-tab="description">{{ section.settings.tab_description }}</button>
      <button class="tab-button" data-tab="specifications">{{ section.settings.tab_specifications }}</button>
      <button class="tab-button" data-tab="components">{{ section.settings.tab_components }}</button>
      <button class="tab-button" data-tab="reviews">{{ section.settings.tab_reviews }} ({{ reviews_count }})</button>
    </div>

    <div class="tabs-content">
      <div class="tab-panel active" id="description">
        <h2>{{ section.settings.about_title }}</h2>
        <div class="description-content">
          {{ product.description }}
        </div>

        {% if product.metafields.custom.key_features %}
          <h3>{{ section.settings.features_title }}</h3>
          <div class="key-features">
            {{ product.metafields.custom.key_features }}
          </div>
        {% endif %}
      </div>

      <div class="tab-panel" id="specifications">
        <h2>{{ section.settings.tab_specifications }}</h2>
        <div class="specifications-list">
          {% if product.metafields.custom.specifications %}
            {{ product.metafields.custom.specifications }}
          {% else %}
            <p>{{ section.settings.no_specifications }}</p>
          {% endif %}
        </div>
      </div>

      <div class="tab-panel" id="components">
        <h2>{{ section.settings.tab_components }}</h2>
        <div class="components-list">
          {% if product.metafields.custom.components %}
            {{ product.metafields.custom.components }}
          {% else %}
            <p>{{ section.settings.no_components }}</p>
          {% endif %}
        </div>
      </div>

      <div class="tab-panel" id="reviews">
        <h2>{{ section.settings.tab_reviews }}</h2>
        <div class="reviews-content">
          <p>{{ section.settings.reviews_coming_soon }}</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Related Products -->
  {% if section.settings.show_related_products %}
    <div class="related-products">
      <h2>{{ section.settings.related_title }}</h2>
      
      <div class="related-grid">
        {% assign current_product_id = product.id %}
        {% for related_product in collections.all.products limit: 4 %}
          {% if related_product.id != current_product_id %}
            <div class="related-card">
              <button class="wishlist-btn-small" onclick="toggleWishlist({{ related_product.id }})">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                </svg>
              </button>

              <a href="{{ related_product.url }}" class="related-image">
                {% if related_product.featured_image %}
                  <img src="{{ related_product.featured_image | img_url: '400x' }}" 
                       alt="{{ related_product.title }}"
                       width="400"
                       height="400" />
                {% else %}
                  <div class="image-placeholder-small"></div>
                {% endif %}
              </a>

              <div class="related-info">
                {% assign first_tag = related_product.tags | first %}
                {% if first_tag %}
                  <span class="related-category">{{ first_tag }}</span>
                {% endif %}

                <h3 class="related-title">
                  <a href="{{ related_product.url }}">{{ related_product.title }}</a>
                </h3>

                <div class="related-rating">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="#FFC107" stroke="none">
                    <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
                  </svg>
                  <span>{{ related_product.metafields.custom.rating | default: 4.5 }}</span>
                </div>

                <div class="related-price">
                  <span class="price">{{ related_product.price | money }}</span>
                </div>

                <button class="related-add-btn" onclick="quickAdd({{ related_product.variants.first.id }})">
                  {{ section.settings.add_to_cart_text }}
                </button>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  {% endif %}
</div>

<style>
/* Base Styles */
.product-page {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif;
  max-width: 1440px;
  margin: 0 auto;
  padding: 24px;
  -webkit-font-smoothing: antialiased;
}

.product-page * {
  box-sizing: border-box;
}

/* Breadcrumb */
.breadcrumb {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 32px;
  font-size: 14px;
  color: #6b7280;
  flex-wrap: wrap;
}

.breadcrumb-back {
  display: flex;
  align-items: center;
  gap: 6px;
  color: #111827;
  text-decoration: none;
  font-weight: 500;
  transition: color 0.2s;
}

.breadcrumb-back:hover {
  color: #6b7280;
}

.breadcrumb a {
  color: inherit;
  text-decoration: none;
  transition: color 0.2s;
}

.breadcrumb a:hover {
  color: #111827;
}

.breadcrumb-separator {
  color: #d1d5db;
}

.breadcrumb-current {
  color: #111827;
  font-weight: 500;
}

/* Product Container */
.product-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 60px;
  margin-bottom: 60px;
}

/* Product Gallery */
.product-gallery {
  position: relative;
}

.product-sale-badge {
  position: absolute;
  top: 16px;
  left: 16px;
  background: #ef4444;
  color: white;
  padding: 6px 14px;
  border-radius: 6px;
  font-size: 12px;
  font-weight: 700;
  text-transform: uppercase;
  z-index: 2;
  letter-spacing: 0.5px;
}

.main-image {
  width: 100%;
  aspect-ratio: 1;
  background: #f3f4f6;
  border-radius: 12px;
  overflow: hidden;
  margin-bottom: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.main-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.image-placeholder {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, #f9fafb 0%, #f3f4f6 100%);
}

.thumbnail-images {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 12px;
}

.thumbnail {
  aspect-ratio: 1;
  background: #f3f4f6;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  border: 2px solid transparent;
  transition: all 0.2s;
}

.thumbnail:hover,
.thumbnail.active {
  border-color: #FF6B35;
}

.thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Product Info */
.product-header {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
}

.product-category {
  font-size: 14px;
  font-weight: 600;
  color: #6b7280;
  text-transform: capitalize;
}

.stock-badge {
  padding: 6px 12px;
  border-radius: 6px;
  font-size: 12px;
  font-weight: 600;
  text-transform: capitalize;
}

.stock-badge.in-stock {
  background: #000;
  color: white;
}

.stock-badge.out-of-stock {
  background: #6b7280;
  color: white;
}

.product-title {
  font-size: 36px;
  font-weight: 700;
  margin: 0 0 16px 0;
  color: #111827;
  line-height: 1.2;
}

.product-rating {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 24px;
}

.stars {
  display: flex;
  gap: 4px;
}

.rating-text {
  font-size: 15px;
  color: #6b7280;
  font-weight: 500;
}

/* Game Specs */
.game-specs {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  padding: 24px;
  background: #f9fafb;
  border-radius: 12px;
  margin-bottom: 24px;
}

.spec-item {
  display: flex;
  align-items: center;
  gap: 12px;
}

.spec-item svg {
  flex-shrink: 0;
}

.spec-value {
  font-size: 18px;
  font-weight: 700;
  color: #111827;
  margin-bottom: 4px;
}

.spec-label {
  font-size: 13px;
  color: #6b7280;
}

/* Price Section */
.product-price-section {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 24px;
  flex-wrap: wrap;
}

.current-price {
  font-size: 40px;
  font-weight: 700;
  color: #111827;
}

.original-price {
  font-size: 24px;
  color: #9ca3af;
  text-decoration: line-through;
}

.save-badge {
  padding: 6px 12px;
  background: #fef2f2;
  color: #ef4444;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 600;
}

/* Quantity and Cart */
.quantity-cart-wrapper {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 16px;
}

.quantity-selector {
  display: flex;
  align-items: center;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  background: white;
  overflow: hidden;
}

.qty-btn {
  width: 44px;
  height: 44px;
  border: none;
  background: transparent;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.2s;
  color: #374151;
}

.qty-btn:hover {
  background: #f3f4f6;
}

.qty-input {
  width: 60px;
  height: 44px;
  border: none;
  text-align: center;
  font-size: 16px;
  font-weight: 600;
  outline: none;
  color: #111827;
  font-family: inherit;
}

.qty-input::-webkit-inner-spin-button,
.qty-input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.stock-status {
  font-size: 14px;
  color: #10b981;
  font-weight: 500;
}

/* Action Buttons */
.action-buttons {
  display: grid;
  grid-template-columns: 1fr auto auto;
  gap: 12px;
  margin-bottom: 24px;
}

.add-to-cart-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 16px 32px;
  background: #000;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
  font-family: inherit;
}

.add-to-cart-btn:hover:not(:disabled) {
  background: #1f2937;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.add-to-cart-btn:disabled {
  background: #9ca3af;
  cursor: not-allowed;
}

.wishlist-icon-btn,
.share-icon-btn {
  width: 52px;
  height: 52px;
  border: 1px solid #e5e7eb;
  background: white;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s;
  color: #374151;
}

.wishlist-icon-btn:hover,
.share-icon-btn:hover {
  background: #f9fafb;
  border-color: #d1d5db;
}

.wishlist-icon-btn.active {
  background: #fef2f2;
  border-color: #ef4444;
  color: #ef4444;
}

.wishlist-icon-btn.active svg {
  fill: #ef4444;
}

/* Product Features */
.product-features {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.feature-item {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 14px;
  color: #374151;
}

.feature-item svg {
  flex-shrink: 0;
}

/* Product Tabs */
.product-tabs {
  margin-bottom: 60px;
}

.tabs-header {
  display: flex;
  gap: 8px;
  border-bottom: 2px solid #e5e7eb;
  margin-bottom: 32px;
  overflow-x: auto;
  scrollbar-width: none;
}

.tabs-header::-webkit-scrollbar {
  display: none;
}

.tab-button {
  padding: 16px 24px;
  background: transparent;
  border: none;
  font-size: 16px;
  font-weight: 500;
  color: #6b7280;
  cursor: pointer;
  position: relative;
  transition: color 0.2s;
  white-space: nowrap;
  font-family: inherit;
}

.tab-button:hover {
  color: #111827;
}

.tab-button.active {
  color: #111827;
}

.tab-button.active::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  right: 0;
  height: 2px;
  background: #000;
}

.tab-panel {
  display: none;
}

.tab-panel.active {
  display: block;
}

.tab-panel h2 {
  font-size: 28px;
  font-weight: 700;
  margin: 0 0 20px 0;
  color: #111827;
}

.tab-panel h3 {
  font-size: 20px;
  font-weight: 600;
  margin: 28px 0 16px 0;
  color: #111827;
}

.description-content,
.specifications-list,
.components-list,
.reviews-content {
  font-size: 16px;
  line-height: 1.7;
  color: #374151;
}

.description-content p,
.specifications-list p,
.components-list p {
  margin-bottom: 16px;
}

.key-features {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  margin-top: 16px;
}

.key-features li {
  display: flex;
  align-items: flex-start;
  gap: 8px;
  color: #374151;
}

/* Related Products */
.related-products {
  margin-top: 60px;
}

.related-products h2 {
  font-size: 28px;
  font-weight: 700;
  margin: 0 0 32px 0;
  color: #111827;
}

.related-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 24px;
}

.related-card {
  background: white;
  border: 1px solid #e5e7eb;
  border-radius: 12px;
  overflow: hidden;
  position: relative;
  transition: all 0.3s;
}

.related-card:hover {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transform: translateY(-4px);
}

.wishlist-btn-small {
  position: absolute;
  top: 12px;
  right: 12px;
  z-index: 2;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  border: none;
  background: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.2s;
  color: #374151;
}

.wishlist-btn-small:hover {
  background: #fef2f2;
  color: #ef4444;
}

.wishlist-btn-small.active svg {
  fill: #ef4444;
  stroke: #ef4444;
}

.related-image {
  display: block;
  aspect-ratio: 1;
  background: #f3f4f6;
  overflow: hidden;
}

.related-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.4s;
}

.related-card:hover .related-image img {
  transform: scale(1.08);
}

.image-placeholder-small {
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #f9fafb 0%, #f3f4f6 100%);
}

.related-info {
  padding: 16px;
}

.related-category {
  font-size: 12px;
  font-weight: 600;
  color: #6b7280;
  text-transform: capitalize;
  display: inline-block;
  margin-bottom: 8px;
}

.related-title {
  font-size: 16px;
  font-weight: 600;
  margin: 0 0 8px 0;
  line-height: 1.3;
}

.related-title a {
  color: #111827;
  text-decoration: none;
  transition: color 0.2s;
}

.related-title a:hover {
  color: #6b7280;
}

.related-rating {
  display: flex;
  align-items: center;
  gap: 6px;
  margin-bottom: 12px;
  font-size: 14px;
  font-weight: 600;
  color: #111827;
}

.related-price {
  margin-bottom: 12px;
}

.related-price .price {
  font-size: 20px;
  font-weight: 700;
  color: #111827;
}

.related-add-btn {
  width: 100%;
  padding: 10px;
  background: #000;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
  font-family: inherit;
}

.related-add-btn:hover {
  background: #1f2937;
}

/* Responsive */
@media (max-width: 1024px) {
  .product-container {
    grid-template-columns: 1fr;
    gap: 40px;
  }

  .game-specs {
    grid-template-columns: repeat(3, 1fr);
  }

  .related-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 768px) {
  .product-page {
    padding: 16px;
  }

  .product-title {
    font-size: 28px;
  }

  .current-price {
    font-size: 32px;
  }

  .game-specs {
    grid-template-columns: 1fr;
  }

  .key-features {
    grid-template-columns: 1fr;
  }

  .action-buttons {
    grid-template-columns: 1fr;
  }

  .wishlist-icon-btn,
  .share-icon-btn {
    width: 100%;
  }

  .related-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 16px;
  }

  .tabs-header {
    gap: 4px;
  }

  .tab-button {
    padding: 12px 16px;
    font-size: 14px;
  }
}

@media (max-width: 480px) {
  .thumbnail-images {
    grid-template-columns: repeat(3, 1fr);
  }

  .breadcrumb {
    font-size: 13px;
  }

  .product-price-section {
    flex-direction: column;
    align-items: flex-start;
  }

  .related-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  
  // Thumbnail image switching
  const thumbnails = document.querySelectorAll('.thumbnail');
  const mainImage = document.getElementById('mainProductImage');
  
  thumbnails.forEach(thumb => {
    thumb.addEventListener('click', function() {
      thumbnails.forEach(t => t.classList.remove('active'));
      this.classList.add('active');
      
      const newImageSrc = this.dataset.image;
      if (mainImage && newImageSrc) {
        mainImage.src = newImageSrc;
      }
    });
  });

  // Tab switching
  const tabButtons = document.querySelectorAll('.tab-button');
  const tabPanels = document.querySelectorAll('.tab-panel');
  
  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      const targetTab = this.dataset.tab;
      
      tabButtons.forEach(btn => btn.classList.remove('active'));
      tabPanels.forEach(panel => panel.classList.remove('active'));
      
      this.classList.add('active');
      document.getElementById(targetTab).classList.add('active');
    });
  });
});

// Quantity functions
function incrementQty() {
  const qtyInput = document.getElementById('quantity');
  if (qtyInput) {
    qtyInput.value = parseInt(qtyInput.value) + 1;
  }
}

function decrementQty() {
  const qtyInput = document.getElementById('quantity');
  if (qtyInput && parseInt(qtyInput.value) > 1) {
    qtyInput.value = parseInt(qtyInput.value) - 1;
  }
}

// Wishlist toggle
function toggleWishlist(productId) {
  const btn = event.currentTarget;
  btn.classList.toggle('active');
  
  // Add your wishlist logic here
  console.log('Wishlist toggled for product:', productId);
  
  // You can use localStorage or make an API call
  let wishlist = JSON.parse(localStorage.getItem('wishlist') || '[]');
  const index = wishlist.indexOf(productId);
  
  if (index > -1) {
    wishlist.splice(index, 1);
  } else {
    wishlist.push(productId);
  }
  
  localStorage.setItem('wishlist', JSON.stringify(wishlist));
}

// Share product
function shareProduct() {
  const productTitle = document.querySelector('.product-title').textContent;
  const productUrl = window.location.href;
  
  if (navigator.share) {
    navigator.share({
      title: productTitle,
      url: productUrl
    }).then(() => {
      console.log('Product shared successfully');
    }).catch((error) => {
      console.log('Error sharing:', error);
    });
  } else {
    // Fallback - copy to clipboard
    navigator.clipboard.writeText(productUrl).then(() => {
      alert('Product link copied to clipboard!');
    });
  }
}

// Quick add to cart for related products
function quickAdd(variantId) {
  fetch('/cart/add.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      id: variantId,
      quantity: 1
    })
  })
  .then(response => response.json())
  .then(data => {
    console.log('Added to cart:', data);
    alert('Product added to cart!');
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Error adding to cart. Please try again.');
  });
}

// Load wishlist state on page load
document.addEventListener('DOMContentLoaded', function() {
  const wishlist = JSON.parse(localStorage.getItem('wishlist') || '[]');
  
  // Check main product wishlist button
  const mainWishlistBtn = document.querySelector('.wishlist-icon-btn');
  if (mainWishlistBtn) {
    const productId = {{ product.id }};
    if (wishlist.includes(productId)) {
      mainWishlistBtn.classList.add('active');
    }
  }
  
  // Check related products wishlist buttons
  document.querySelectorAll('.wishlist-btn-small').forEach(btn => {
    const productId = parseInt(btn.getAttribute('onclick').match(/\d+/)[0]);
    if (wishlist.includes(productId)) {
      btn.classList.add('active');
    }
  });
});
</script>

{% schema %}
{
  "name": "Product Page",
  "settings": [
    {
      "type": "header",
      "content": "Breadcrumb Settings"
    },
    {
      "type": "text",
      "id": "back_text",
      "label": "Back Text",
      "default": "Back to Games"
    },
    {
      "type": "text",
      "id": "home_text",
      "label": "Home Text",
      "default": "Home"
    },
    {
      "type": "text",
      "id": "collections_text",
      "label": "Collections Text",
      "default": "Games"
    },
    {
      "type": "header",
      "content": "Product Info"
    },
    {
      "type": "text",
      "id": "sale_badge_text",
      "label": "Sale Badge Text",
      "default": "Sale"
    },
    {
      "type": "text",
      "id": "in_stock_text",
      "label": "In Stock Text",
      "default": "In Stock"
    },
    {
      "type": "text",
      "id": "out_stock_text",
      "label": "Out of Stock Text",
      "default": "Out of Stock"
    },
    {
      "type": "text",
      "id": "reviews_text",
      "label": "Reviews Text",
      "default": "reviews"
    },
    {
      "type": "header",
      "content": "Game Specifications"
    },
    {
      "type": "text",
      "id": "players_text",
      "label": "Players Label",
      "default": "Players"
    },
    {
      "type": "text",
      "id": "playtime_text",
      "label": "Play Time Label",
      "default": "Play Time"
    },
    {
      "type": "text",
      "id": "complexity_text",
      "label": "Complexity Label",
      "default": "Complexity"
    },
    {
      "type": "header",
      "content": "Pricing"
    },
    {
      "type": "text",
      "id": "save_text",
      "label": "Save Text",
      "default": "Save"
    },
    {
      "type": "header",
      "content": "Buttons"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to Cart Text",
      "default": "Add to Cart"
    },
    {
      "type": "text",
      "id": "sold_out_text",
      "label": "Sold Out Text",
      "default": "Sold Out"
    },
    {
      "type": "header",
      "content": "Product Features"
    },
    {
      "type": "text",
      "id": "feature_1",
      "label": "Feature 1",
      "default": "Free shipping on orders over $75"
    },
    {
      "type": "text",
      "id": "feature_2",
      "label": "Feature 2",
      "default": "30-day return policy"
    },
    {
      "type": "text",
      "id": "feature_3",
      "label": "Feature 3",
      "default": "Secure payment processing"
    },
    {
      "type": "header",
      "content": "Product Tabs"
    },
    {
      "type": "text",
      "id": "tab_description",
      "label": "Description Tab Text",
      "default": "Description"
    },
    {
      "type": "text",
      "id": "tab_specifications",
      "label": "Specifications Tab Text",
      "default": "Specifications"
    },
    {
      "type": "text",
      "id": "tab_components",
      "label": "Components Tab Text",
      "default": "Components"
    },
    {
      "type": "text",
      "id": "tab_reviews",
      "label": "Reviews Tab Text",
      "default": "Reviews"
    },
    {
      "type": "text",
      "id": "about_title",
      "label": "About Title",
      "default": "About This Game"
    },
    {
      "type": "text",
      "id": "features_title",
      "label": "Key Features Title",
      "default": "Key Features"
    },
    {
      "type": "text",
      "id": "no_specifications",
      "label": "No Specifications Text",
      "default": "No specifications available."
    },
    {
      "type": "text",
      "id": "no_components",
      "label": "No Components Text",
      "default": "No components information available."
    },
    {
      "type": "text",
      "id": "reviews_coming_soon",
      "label": "Reviews Coming Soon Text",
      "default": "Reviews coming soon!"
    },
    {
      "type": "header",
      "content": "Related Products"
    },
    {
      "type": "checkbox",
      "id": "show_related_products",
      "label": "Show Related Products",
      "default": true
    },
    {
      "type": "text",
      "id": "related_title",
      "label": "Related Products Title",
      "default": "You Might Also Like"
    }
  ]
}
{% endschema %}